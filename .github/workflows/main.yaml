name: CI/CD SigaMovil # Nombre del flujo de trabajo

on:
  push:
    branches:
      - jbcCodeSM
  workflow_dispatch: # Permite la ejecución manual del flujo de trabajo

jobs:
  build-and-test:
    runs-on: ubuntu-latest # Sistema operativo para el job

    steps:
      # 1. Revisar código del repositorio
      - name: Revisar código
        uses: actions/checkout@v2

      # 2. Configurar Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      # 3. Cache de dependencias para optimizar el flujo
      - name: Cache de dependencias
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Instalar dependencias
      - name: Instalar dependencias
        run: npm ci

      # 5. Ejecución de pruebas unitarias
      - name: Ejecutar pruebas unitarias
        run: npm test

      # 6. Pruebas E2E
      #- name: Iniciar el servidor para pruebas E2E
      #  run: npm start &
      #- name: Esperar al servidor
      #  run: |
      #    echo "Esperando al servidor para pruebas E2E..."
      #    sleep 10
      #- name: Ejecutar pruebas E2E
      #  run: npx cypress run

      # 7. Instalar eas-cli
      - name: Instalar eas-cli
        run: npm install -g eas-cli

      # 8. Generar APK con Expo
      - name: Generar APK con Expo
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          # Construye apk
          eas build --platform android --non-interactive

      # 9. Subir APK como artefacto
      - name: Subir APK como artefacto
        uses: actions/upload-artifact@v3
        with:
          name: siga_mobile_apk
          path: siga_mobile.apk

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      # 1. Revisar código del repositorio
      - name: Revisar código
        uses: actions/checkout@v2

      # 2. Configurar Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      # 3. Instalar dependencias
      - name: Instalar dependencias
        run: npm ci

      # 4. Desplegar en Vercel
      - name: Desplegar en Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          # Comando de despliegue con Vercel
          npx vercel --prod